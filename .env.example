# =============================================================================
# CADDY CONFIGURATION (for cloud deployment)
# =============================================================================
# Required for cloud deployment with automatic SSL certificates
AGENT_API_HOSTNAME=agent.yourdomain.com
FRONTEND_HOSTNAME=chat.yourdomain.com
LETSENCRYPT_EMAIL=your-email@example.com

# =============================================================================
# FRONTEND CONFIGURATION (frontend-dev service)
# =============================================================================

# Supabase Configuration
NEXT_PUBLIC_SUPABASE_URL=https://your-project-id.supabase.co
NEXT_PUBLIC_SUPABASE_ANON_KEY=your-supabase-anon-key

# API Configuration
NEXT_PUBLIC_PYDANTIC_AGENT_API_URL=http://localhost:8001/api/pydantic-agent
NEXT_PUBLIC_SITE_URL=http://localhost:3000
NEXT_PUBLIC_ENABLE_STREAMING=true

# Google OAuth Configuration
GOOGLE_CLIENT_ID=your-google-client-id
GOOGLE_CLIENT_SECRET=your-google-client-secret
SUPABASE_CALLBACK_URL=https://your-project-id.supabase.co/auth/v1/callback

# =============================================================================
# AGENT API CONFIGURATION (agent-api-dev service)
# =============================================================================

# OpenAI Configuration (REQUIRED)
OPENAI_API_KEY=your-openai-api-key
OPENAI_BASE_URL=https://api.openai.com/v1
OPENAI_MODEL=gpt-4o
VISION_MODEL=gpt-4o
EMBEDDING_MODEL=text-embedding-3-small

# Brave Search API (for web search in agent)
BRAVE_API_KEY=your-brave-api-key
BRAVE_SEARCH_URL=https://api.search.brave.com/res/v1/web/search

# SearXNG Configuration (optional, alternative to Brave)
SEARXNG_BASE_URL=http://localhost:8080

# Supabase Configuration
SUPABASE_URL=https://your-project-id.supabase.co
SUPABASE_ANON_KEY=your-supabase-anon-key
SUPABASE_SERVICE_ROLE_KEY=your-supabase-service-role-key

# Database Connection
DATABASE_URL=postgresql://postgres.your-project:password@aws-0-region.pooler.supabase.com:6543/postgres

# Memory Management (Mem0)
MEM0_API_KEY=your-mem0-api-key

# Debug Mode
DEBUG_MODE=false

# =============================================================================
# RAG PIPELINE CONFIGURATION (rag-google-drive-dev & rag-local-files-dev)
# =============================================================================

# Google Drive RAG Pipeline
GOOGLE_DRIVE_CREDENTIALS_JSON={"type":"service_account","project_id":"..."}
RAG_WATCH_FOLDER_ID=google-drive-folder-id-to-watch

# Local Files RAG Pipeline
# Path on host machine that will be mounted to container
RAG_LOCAL_DIRECTORY=./test_files

# RAG Pipeline Settings
RUN_MODE=continuous  # or 'single' for single-run mode

# API Service Configuration
API_PORT=8001

# Optional: OpenRouter for alternative LLM providers
OPENROUTER_API_KEY=your-openrouter-api-key

# Optional: Anthropic Claude API (if using Claude directly)
ANTHROPIC_API_KEY=your-anthropic-api-key

# Optional: Logfire for monitoring
LOGFIRE_TOKEN=your-logfire-token

# ==========================================
# Docker Compose Profiles
# ==========================================

# Available profiles:
# - simple: Use simple agent API without MCP server
# - with-rag: Include RAG pipeline service
# - with-redis: Include Redis caching service  
# - with-db: Include PostgreSQL database

# To use profiles, run:
# docker-compose --profile simple up
# docker-compose --profile with-rag --profile with-redis up

# Production deployment:
# docker-compose -f docker-compose.yml up

# Development:
# docker-compose -f docker-compose.dev.yml up

# =============================================================================
# AGENT OBSERVABILITY CONFIGURATION (Optional)
# =============================================================================

# LangFuse configuration for agent observability (optional - leave empty to disable)
# Provides detailed insights into agent conversations, performance metrics, and debugging
# Get your keys from https://cloud.langfuse.com/ after creating a project
# Langfuse host will be http://langfuse-web:3000 (or your domain) for the Local AI Package and https://cloud.langfuse.com for cloud
LANGFUSE_PUBLIC_KEY=
LANGFUSE_SECRET_KEY=
LANGFUSE_HOST=https://cloud.langfuse.com

# Frontend Langfuse URL with project ID (for clickable links in UI)
# Format: https://us.cloud.langfuse.com/project/YOUR_PROJECT_ID
# This enables clickable session links in the chat interface
NEXT_PUBLIC_LANGFUSE_HOST_WITH_PROJECT=


# =============================================================================
# RAG PIPELINE CONFIGURATION
# =============================================================================

# Controls which pipeline to run:
# - "local": Watch local files in mounted volume
# - "google_drive": Watch Google Drive files via API
RAG_PIPELINE_TYPE=local

# Controls how the RAG pipeline runs:
# - "continuous": Runs continuously, checking for changes at regular intervals
# - "single": Performs one check for changes and exits (for cron jobs, cloud schedulers)
RUN_MODE=continuous

# Interval in seconds between checks (continuous mode only)
CHECK_INTERVAL=60

# Unique identifier for this pipeline instance (required for single-run mode)
# Used for database state management to track last_check_time and known_files
# Examples: "prod-drive-pipeline", "dev-local-pipeline", "staging-pipeline"
RAG_PIPELINE_ID=
